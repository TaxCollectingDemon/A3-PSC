Nivel 1;
Cenario 1: Capitulo 2;
Eles estão almoçando num restaurante em que, invés de as pessoas se servirem, robôs servem elas no buffet com o que pedem. Já comendo e conversando na mesa, veem que um dos robôs está apresentando falhas no momento de servir o prato, até que ele tem uma falha total e começa a jogar os pratos e alimentos nas pessoas, nossos personagens se deparam com essa situação e vão correndo ao gerente para perguntar: “em qual linguagem aquele robô está programado?” gerente: “Está programado em Java mas ninguém aqui do restaurante sabe Java além do nosso técnico que está folga!”, logo eles vão em direção ao robô, desviando de todos os pratos e alimentos jogados neles, chegam por trás, conseguem abrir uma portinhola de entrada para o seu hardware, Neo pluga seu NovaBit (celular do futuro) a uma entrada da placa-mãe e acessa o código-fonte do robô, identificando o erro no código, Neo terá que tomar uma decisão de como resolver o problema:
Qual opção Neo deve executar no código-fonte para solucionar o seguinte problema:

pegarPrato(); //pega o prato a servir
String cliente = "Cliente";
String mesa = "Mesa 1";
        
if (pratoNaMao == true) {
    String alvo = cliente;
}
colocarprato(alvo); //põe o prato no destino alvo

Resposta 1: Incorreta
Substituir 'true' por 'false' em
if (pratoNaMao == true)
Conclusao
O robô parou de servir os clientes completamente.

Resposta 2: Correta
Substituir 'cliente' por 'mesa' em
String alvo = cliente;
Conclusao
O robô volta a servir os pratos nas mesas normalmente.

Resposta 3: Incorreta
Substituir 'alvo' por 'mesa' em 
colocarprato(alvo);
Conclusao
O robô fica tentando servir as mesas mesmo quando não tem prato a servir e não consegue terminar as tarefas.

Resposta 4: Incorreta
Substituir 'String alvo' por 'mesa' em
String alvo = cliente;
Conclusao
O robô não compila o código, pois não existe variável 'alvo'.


Cenario 2: Capitulo 2;
A narrativa se desenvolve num futuro distante (em torno de 2100), em que Astra e Neo são amigos de infância enfrentando problemas do dia a dia com Java.  
Nas escolas do século XXII, já é ensinado como opcional em projeto de vida e no ensino médio, na grade curricular de exatas, programação em Java. A partir disso, Astra e Neo resolvem problemas dentro e fora da escola usando Java, como está para acontecer agora, eles estão voltando para casa, quando chegam em rua com um semáforo, param na faixa de pedestre para atravessar… porém as cores começam a alterar de forma aleatória sem sentido. Para que possam resolver esse problema, acessam o terminal do semáforo, abrem o código fonte e veem o erro:

ligarSemaforo(); //liga o semáforo
int semaforo = 1;
while (semaforoLigado == true) {
    if (semaforo == 1) {
        ascenderVerde(); //ascende o verde
        desligarAmarelo(); //desliga o amarelo
        desligarVermelho(); //desliga o vermelho
        semaforo++;
    } if (semaforo == 2) {
        ascenderAmarelo(); //ascende o amarelo
        desligarVerde(); //desliga o verde
        desligarVermelho(); //desliga o vermelho
        semaforo++;
    } if (semaforo == 3) {
        ascenderVermelho(); //ascende o vermelho
        desligarVerde(); //desliga o verde
        desligarAmarelo(); //desliga o amarelo
        semaforo++;
    }
    if (semaforo == 4) {
        ascenderAmarelo(); //ascende o amarelo
        desligarVerde(); //desliga o verde
        desligarVermelho(); //desliga o vermelho
        semaforo = 1;
    }
    esperarSegundos(15); //espera 15 segundos antes de mudar a cor do semáforo
}

Resposta 1: Correta
Colocar 'else' antes de cada 'if ()'após o primeiro
Conclusao
O semáforo volta a funcionar ao normal.

Resposta 2: Incorreta
Substituir os símbolos de == com <= 
Conclusao
O semáforo continua piscando sem sentido.

Resposta 3: Incorreta
Colocar a linha de código 'esperarSegundos(15);' fora do loop while
Conclusao
O semáforo continua piscando ainda mais freneticamente.

Resposta 4: Incorreta
Colocar a declaração de 'semáforo' inicial como 
semaforo = 0;
Conclusao
O semáforo continua piscando da mesma maneira.


Cenario 3: Capitulo 2;
A narrativa se desenvolve num futuro distante (em torno de 2100), em que Astra e Neo são amigos de infância enfrentando problemas do dia a dia com Java.  

Nas escolas do século XXII, já é ensinado como opcional em projeto de vida e no ensino médio, na grade curricular de exatas, programação em Java. A partir disso, Astra e Neo resolvem problemas dentro e fora da escola usando Java, como está para acontecer agora, nas escolas do século XXII, já é ensinado como opcional em projeto de vida e no ensino médio, na grade curricular de exatas, programação em Java. A partir disso, Astra e Neo resolvem problemas dentro e fora da escola usando Java, como está para acontecer agora, eles estão indo às suas atividades extracurriculares, Astra vai para a aula de vôlei e Neo a aula de futebol, mas antes vão ao sistema da escola para liberar seus NovaBits (celulares do futuro), porém o sistema não os reconhece:
        
IdentificarNomes();
String Πome =  Neo Reeves;
String Πome = Astra skywalker;
if ( identificar Nomes == true ) {
LiberarCelular();
        } else {
        NãoLiberarCelular;
        }
}


Resposta 1: Correta
Trocar a primeira letra  da variavel String 
Conclusao
Neo e Astra conseguem pegar seus celulares.

Resposta 2: Incorreta
Trocar true por false.
Conclusao
O sistema nao liberou seus celulares.

Resposta 3: Incorreta
Agrupar o nome do Neo e da Astra na mesma variavel.
Conclusao
O sistema nao liberou seus celulares.

Resposta 4: Incorreta
Trocar o if por while
Conclusao
O sistema nao liberou seus celulares.


Cenario 4: Capitulo 2;
A narrativa se desenvolve num futuro distante (em torno de 2100), em que Astra e Neo são amigos de infância enfrentando problemas do dia a dia com Java.  
Nas escolas do século XXII, já é ensinado como opcional em projeto de vida e no ensino médio, na grade curricular de exatas, programação em Java. A partir disso, Astra e Neo resolvem problemas dentro e fora da escola usando Java, como está para acontecer agora,a pós suas aulas, Astra e Neo pegam um ônibus para voltar para casa, Astra consegue passar na catraca normalmente com seu reconhecimento facial e pagou também sua meia-entrada de estudante, Neo não consegue passar na catraca pelo fato de sua meia-entrada estar zerada, porém com uma nova regra, você pode passar 1 entrada negativa para que quando chegar ao seu destino, recarregue suas entradas. Assim, Neo reconhece o erro no código:

double precoPassagem = 5.00;
int descontoEstudante = 2;
boolean estudante = true;
double saldo = 2.00;
if (estudante == true) {
    precoPassagem = precoPassagem / descontoEstudante; //aplica o desconto de estudante
}
if (saldo - precoPassagem >= 0) {
    saldo = saldo - precoPassagem; //paga a passagem
    System.out.println("Passagem paga com sucesso! Saldo restante: " + saldo);
} else {
    System.out.println("Saldo insuficiente para pagar a passagem.");
}

Resposta 1: Correta
Remover '- precoPassagem' de
if (saldo - precoPassagem >= 0)
Conclusao
A catraca liberou a passagem normalmente, deixando Neo com saldo negativo.

Resposta 2: Incorreta
trocar no segundo if >= por <==
Conclusao
A passagem nunca será paga e a catraca nao será liberada.

Resposta 3: Incorreta
trocar o boolean estudante de true pra false
Conclusao
Quebra o código.

Resposta 4: Incorreta
trocar o true por estudante no primeiro if
Conclusao
Nunca será aplicado o desconto de estudante para um estudante.


Cenario 5: Capitulo 2;
A narrativa se desenvolve num futuro distante (em torno de 2100), em que Astra e Neo são amigos de infância enfrentando problemas do dia a dia com Java.  
Nas escolas do século XXII, já é ensinado como opcional em projeto de vida e no ensino médio, na grade curricular de exatas, programação em Java. A partir disso, Astra e Neo resolvem problemas dentro e fora da escola usando Java, como está para acontecer agora, durante o intervalo, Neo e Astra vão comprar seus lanches na máquina de lanches 3000, que tem tudo que você possa imaginar de lanche, Astra seleciona o que quer, paga com o valor exato, mas Neo… trouxe dinheiro, pois sua avó lhe deu para comprar o que quisesse (escondido dos seus pais), quando foi inserir a nota, a máquina não retornou o troco. Dessa forma, Neo conseguiu abrir a máquina e acessar o código-fonte, visualizando o erro:
private static final double PRECO_LANCHE = 8.50;
double valorInserido = 20.00; // Dinheiro que Neo inseriu
        
System.out.println("Bem-vindo à Máquina de Lanches 3000!");
System.out.println("Preço do lanche selecionado: R$ " + PRECO_LANCHE);
System.out.println("Valor inserido: R$ " + valorInserido);
        
double troco = PRECO_LANCHE - valorInserido;       
System.out.println("Troco a ser devolvido: R$ " + troco);

Resposta 1: Correta
Inverter 'PRECO_LANCHE' e 'valorInserido' em
double troco = PRECO_LANCHE - valorInserido;
Conclusao
A máquina agora pede o valor normal de troco.

Resposta 2: Incorreta
Ajustar PRECO_LANCHE para 20.00
Conclusao
O robô agora não oferece nenhum troco.

Resposta 3: Incorreta
Mudar o sinal de menos para mais em
double troco = PRECO_LANCHE - valorInserido;
Conclusao
A máquina agora oferece troco demais.

Resposta 4: Incorreta
Substituir 'troco' por 'PRECO_LANCHE' em
System.out.println("Troco a ser devolvido: R$ " + troco);
Conclusao
A máquina agora sempre oferece troco igual ao valor da compra.

Nivel 2;
Cenario 1: Capitulo 2;
Depois de conseguirem resolver esse problema, passam-se algumas semanas e eles vão praticando cada vez mais java até que, Astra irá se deparar com um problema dentro do estoque do Pai, que está com o sistema mal atualizado para suas funções, entregadores de produtos vem de diferentes lugares do país, buscando novas cargas para entregar, como o estoque é bem grande e o Pai de Astra traz produtos diariamente, todos sabem que ele terá uma carga para você levar, o sistema do estoque do pai de Astra precisa limitar a quantidade de cargas disponíveis, mas o loop atual nunca termina. Astra localiza o seguinte trecho de código:


int carga = 0;
while(carga >= 0) {
    System.out.println("Distribuindo carga " + carga);
    carga++;
}


Resposta 1: Incorreta
Astra muda para carga--
Conclusao
O loop continua infinito.

Resposta 2: Incorreta
Astra muda para carga == 0
Conclusao
O loop não executa nada.

Resposta 3: Correta
Astra muda a condição para carga < 10
Conclusao
O sistema distribui até 10 cargas e para.

Resposta 4: Incorreta
Astra muda para for(int i = 0; i <= carga; i--)
Conclusao
Loop infinito.

Cenario 2: Capitulo 2;
Depois de conseguirem resolver esse problema, passam-se algumas semanas e eles vão praticando cada vez mais java até que, Astra irá se deparar com um problema dentro do estoque do Pai, que está com o sistema mal atualizado para suas funções, entregadores de produtos vem de diferentes lugares do país, buscando novas cargas para entregar, como o estoque é bem grande e o Pai de Astra traz produtos diariamente, todos sabem que ele terá uma carga para você levar, automóveis com diferentes capacidades precisam ser considerados. Astra encontra esse código:


int peso = 700;
while(peso < 1000) {
    System.out.println("Produto aceito com peso: " + peso);
    peso += 200;
}


Resposta 1: Correta
Astra ajusta peso inicial para 200
Conclusao
Só produtos leves entram no loop.

Resposta 2: Incorreta
Astra muda para peso > 1000
Conclusao
Nada é impresso.

Resposta 3: Incorreta
Astra retira o incremento do peso
Conclusao
Loop infinito.

Resposta 4: Incorreta
Astra usa peso -= 100
Conclusao
Loop infinito de decremento.

Cenario 3: Capitulo 2;
Depois de conseguirem resolver esse problema, passam-se algumas semanas e eles vão praticando cada vez mais java até que, Astra irá se deparar com um problema dentro do estoque do Pai, que está com o sistema mal atualizado para suas funções, entregadores de produtos vem de diferentes lugares do país, buscando novas cargas para entregar, como o estoque é bem grande e o Pai de Astra traz produtos diariamente, todos sabem que ele terá uma carga para você levar, cargas precisam ser entregues antes de um horário. Astra vê o seguinte código:


int horaAtual = 12;
for(int horaEntrega = 13; horaEntrega <= 18; horaEntrega++) {
    if(horaEntrega < horaAtual) {
        System.out.println("Entrega atrasada");
    }
}


Resposta 1: Incorreta
Astra inverte a condição para horaEntrega > horaAtual
Conclusao
Mensagem não aparece.

Resposta 2: Incorreta
Astra usa while ao invés de for
Conclusao
Problema permanece.

Resposta 3: Correta
Astra ajusta horaAtual para 19
Conclusao
Todas as entregas marcadas serão tratadas como atrasadas.

Resposta 4: Incorreta
Astra usa horaEntrega == horaAtual
Conclusao
Apenas uma entrega é checada.

Cenario 4: Capitulo 2;
Depois de conseguirem resolver esse problema, passam-se algumas semanas e eles vão praticando cada vez mais java até que, Astra irá se deparar com um problema dentro do estoque do Pai, que está com o sistema mal atualizado para suas funções, entregadores de produtos vem de diferentes lugares do país, buscando novas cargas para entregar, como o estoque é bem grande e o Pai de Astra traz produtos diariamente, todos sabem que ele terá uma carga para você levar, verificação de combustível antes de seguir viagem. Astra vê esse código:


int combustivel = 10;
int distancia = 15;
while(combustivel > distancia) {
    System.out.println("Pode seguir viagem");
    distancia--;
}


Resposta 1: Correta
Astra troca > por >=
Conclusao
Agora pode seguir com combustível igual à distância.

Resposta 2: Incorreta
Astra troca combustivel e distancia de lugar
Conclusao
Erro de lógica.

Resposta 3: Incorreta
Astra aumenta a distância no loop
Conclusao
Nunca termina.

Resposta 4: Incorreta
Astra retira o while
Conclusao
Nada acontece.

Cenario 5: Capitulo 2;
Depois de conseguirem resolver esse problema, passam-se algumas semanas e eles vão praticando cada vez mais java até que, Astra irá se deparar com um problema dentro do estoque do Pai, que está com o sistema mal atualizado para suas funções, entregadores de produtos vem de diferentes lugares do país, buscando novas cargas para entregar, como o estoque é bem grande e o Pai de Astra traz produtos diariamente, todos sabem que ele terá uma carga para você levar, cargas com diferentes volumes. Astra precisa ajustar o seguinte código:


int quantidade = 0;
while(quantidade != 10) {
    System.out.println("Adicionando item " + quantidade);
    quantidade++;
}


Resposta 1: Incorreta
Astra muda a condição para quantidade == 10
Conclusao
Loop não executa.

Resposta 2: Correta
Astra muda para quantidade < 10
Conclusao
Loop executa 10 vezes.

Resposta 3: Incorreta
Astra usa quantidade <= 10
Conclusao
Adiciona um item a mais.

Resposta 4: Incorreta
Astra retira quantidade++
Conclusao
Loop infinito.

Nivel 3
Já resolvido esse problema no estoque do pai de Astra, agora, Neo é que irá se deparar com uma situação nada agradável… A casa em que mora com os pais é automatizada pelo sistema da google, algo comum nessa época, que está com mal funcionamento, mesmo Neo e seu pai tentando chamar o serviço de manutenção, não tiveram resposta… então terão que resolver sozinhos. Neo abre o aplicativo da google home, abre o código-fonte e já identifica alguns problemas da última atualização...

Cenario 1: Capitulo 2;
Já resolvido esse problema no estoque do pai de Astra, agora, Neo é que irá se deparar com uma situação nada agradável… A casa em que mora com os pais é automatizada pelo sistema da google, algo comum nessa época, que está com mal funcionamento, mesmo Neo e seu pai tentando chamar o serviço de manutenção, não tiveram resposta… então terão que resolver sozinhos. Neo abre o aplicativo da google home, abre o código-fonte e já identifica alguns problemas da última atualização, sistema da casa de Neo não fecha janelas corretamente. Ele encontra este código:


for(int i = 0; i <= 5; i++) {
    if(i == 3) continue;
    System.out.println("Janela " + i + " fechada");
}


Resposta 1: Correta
Neo remove o continue
Conclusao
Todas janelas são fechadas.

Resposta 2: Incorreta
Neo muda para if(i != 3)
Conclusao
Janela 3 ainda não é fechada.

Resposta 3: Incorreta
Neo usa break
Conclusao
Para no meio do processo.

Resposta 4: Incorreta
Neo troca <= por ==
Conclusao
Só uma janela é verificada.

Cenario 2: Capitulo 2;
Já resolvido esse problema no estoque do pai de Astra, agora, Neo é que irá se deparar com uma situação nada agradável… A casa em que mora com os pais é automatizada pelo sistema da google, algo comum nessa época, que está com mal funcionamento, mesmo Neo e seu pai tentando chamar o serviço de manutenção, não tiveram resposta… então terão que resolver sozinhos. Neo abre o aplicativo da google home, abre o código-fonte e já identifica alguns problemas da última atualização, luzes não desligam corretamente. Neo verifica:



int luz = 1;
while(luz < 4) {
    if(luz == 2) break;
    System.out.println("Desligando luz " + luz);
    luz++;
}


Resposta 1: Correta
Neo remove o break
Conclusao
Todas luzes desligam.

Resposta 2: Incorreta
Neo usa luz--
Conclusao
Loop infinito.

Resposta 3: Incorreta
Neo muda para luz <= 4
Conclusao
Mensagem extra.

Resposta 4: Incorreta
Neo troca < por ==
Conclusao
Loop não executa.

Cenario 3: Capitulo 2;
Já resolvido esse problema no estoque do pai de Astra, agora, Neo é que irá se deparar com uma situação nada agradável… A casa em que mora com os pais é automatizada pelo sistema da google, algo comum nessa época, que está com mal funcionamento, mesmo Neo e seu pai tentando chamar o serviço de manutenção, não tiveram resposta… então terão que resolver sozinhos. Neo abre o aplicativo da google home, abre o código-fonte e já identifica alguns problemas da última atualização, aparelhos não ligam. Neo vê o código:


for(int i = 0; i < 3; i++) {
    if(i == 1) return;
    System.out.println("Ligando aparelho " + i);
}


Resposta 1: Correta
Neo substitui return por continue
Conclusao
Aparelhos ligam normalmente, exceto o 1.

Resposta 2: Incorreta
Neo mantém o return
Conclusao
Só o primeiro liga.

Resposta 3: Incorreta
Neo troca for por while sem incremento
Conclusao
Loop infinito.

Resposta 4: Incorreta
Neo adiciona break
Conclusao
Interrompe cedo demais.

Cenario 4: Capitulo 2;
Já resolvido esse problema no estoque do pai de Astra, agora, Neo é que irá se deparar com uma situação nada agradável… A casa em que mora com os pais é automatizada pelo sistema da google, algo comum nessa época, que está com mal funcionamento, mesmo Neo e seu pai tentando chamar o serviço de manutenção, não tiveram resposta… então terão que resolver sozinhos. Neo abre o aplicativo da google home, abre o código-fonte e já identifica alguns problemas da última atualização, portas não fecham. Neo vê:


int porta = 0;
while(porta < 3) {
    System.out.println("Fechando porta " + porta);
    porta += 2;
}


Resposta 1: Incorreta
Neo muda porta += 3
Conclusao
Só uma porta fecha.

Resposta 2: Correta
Neo muda para porta++
Conclusao
Todas portas são fechadas.

Resposta 3: Incorreta
Neo muda para porta = porta - 1
Conclusao
Loop infinito.

Resposta 4: Incorreta
Neo tira a linha do incremento
Conclusao
Loop infinito.

Cenario 5: Capitulo 2;
Já resolvido esse problema no estoque do pai de Astra, agora, Neo é que irá se deparar com uma situação nada agradável… A casa em que mora com os pais é automatizada pelo sistema da google, algo comum nessa época, que está com mal funcionamento, mesmo Neo e seu pai tentando chamar o serviço de manutenção, não tiveram resposta… então terão que resolver sozinhos. Neo abre o aplicativo da google home, abre o código-fonte e já identifica alguns problemas da última atualização, informações incorretas. Neo encontra:


for(int i = 0; i < 3; i++) {
    System.out.println("Temperatura: 22");
    break;
}


Resposta 1: Incorreta
Neo tira o for
Conclusao
Executa só uma vez.

Resposta 2: Incorreta
Neo mantém o break
Conclusao
Só uma vez executa.

Resposta 3: Incorreta
Neo muda para while(i < 3)
Conclusao
Erro de compilação.

Resposta 4: Correta
Neo retira o break
Conclusao
Temperatura exibida corretamente 3 vezes.
